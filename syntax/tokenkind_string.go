// Code generated by "stringer -type=tokenKind -trimprefix=tok -linecomment=true"; DO NOT EDIT.

package syntax

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[tokNone-0]
	_ = x[tokChar-1]
	_ = x[tokGroupFlags-2]
	_ = x[tokPosixClass-3]
	_ = x[tokConcat-4]
	_ = x[tokRepeat-5]
	_ = x[tokEscape-6]
	_ = x[tokEscapeChar-7]
	_ = x[tokEscapeOctal-8]
	_ = x[tokEscapeUni-9]
	_ = x[tokEscapeUniFull-10]
	_ = x[tokEscapeHex-11]
	_ = x[tokEscapeHexFull-12]
	_ = x[tokQ-13]
	_ = x[tokMinus-14]
	_ = x[tokLbracket-15]
	_ = x[tokLbracketCaret-16]
	_ = x[tokRbracket-17]
	_ = x[tokDollar-18]
	_ = x[tokCaret-19]
	_ = x[tokQuestion-20]
	_ = x[tokDot-21]
	_ = x[tokPlus-22]
	_ = x[tokStar-23]
	_ = x[tokPipe-24]
	_ = x[tokLparen-25]
	_ = x[tokLparenName-26]
	_ = x[tokLparenFlags-27]
	_ = x[tokRparen-28]
}

const _tokenKind_name = "NoneCharGroupFlagsPosixClassConcatRepeatEscapeEscapeCharEscapeOctalEscapeUniEscapeUniFullEscapeHexEscapeHexFull\\Q-[[^]$^?.+*|((?P<name>(?flags)"

var _tokenKind_index = [...]uint8{0, 4, 8, 18, 28, 34, 40, 46, 56, 67, 76, 89, 98, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 135, 142, 143}

func (i tokenKind) String() string {
	if i >= tokenKind(len(_tokenKind_index)-1) {
		return "tokenKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _tokenKind_name[_tokenKind_index[i]:_tokenKind_index[i+1]]
}
